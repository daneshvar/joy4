// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import av "github.com/daneshvar/joy4/av"
import mock "github.com/stretchr/testify/mock"
import time "time"

// AudioCodecData is an autogenerated mock type for the AudioCodecData type
type AudioCodecData struct {
	mock.Mock
}

// ChannelLayout provides a mock function with given fields:
func (_m *AudioCodecData) ChannelLayout() av.ChannelLayout {
	ret := _m.Called()

	var r0 av.ChannelLayout
	if rf, ok := ret.Get(0).(func() av.ChannelLayout); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(av.ChannelLayout)
	}

	return r0
}

// PacketDuration provides a mock function with given fields: _a0
func (_m *AudioCodecData) PacketDuration(_a0 []byte) (time.Duration, error) {
	ret := _m.Called(_a0)

	var r0 time.Duration
	if rf, ok := ret.Get(0).(func([]byte) time.Duration); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(time.Duration)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]byte) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SampleFormat provides a mock function with given fields:
func (_m *AudioCodecData) SampleFormat() av.SampleFormat {
	ret := _m.Called()

	var r0 av.SampleFormat
	if rf, ok := ret.Get(0).(func() av.SampleFormat); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(av.SampleFormat)
	}

	return r0
}

// SampleRate provides a mock function with given fields:
func (_m *AudioCodecData) SampleRate() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// Type provides a mock function with given fields:
func (_m *AudioCodecData) Type() av.CodecType {
	ret := _m.Called()

	var r0 av.CodecType
	if rf, ok := ret.Get(0).(func() av.CodecType); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(av.CodecType)
	}

	return r0
}
